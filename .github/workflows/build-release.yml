name: Build release artifacts
on:
  workflow_dispatch:
    inputs:
      upload-artifacts:
        type: string
        default: 'NO'
      artifacts-retention-days:
        type: number
        default: 1
      publish:
        type: string
        default: 'NO'
  workflow_call:
    inputs:
      upload-artifacts:
        type: string
        default: 'YES'
      artifacts-retention-days:
        type: number
        default: 3
      publish:
        type: string
        default: 'NO'

jobs:
  build-linux-x86_64:
    runs-on: ubuntu-22.04
    container: nvidia/cuda:12.6.2-devel-ubuntu22.04
    steps:
      - name: Upgrade git
        run: apt-get update && apt-get install -y git
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: externals cache
        uses: actions/cache@v4
        with:
          path: externals
          key: ${{ runner.os }}-${{ runner.arch }}-externals-${{ hashFiles('scripts/prepare-*.sh') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install build dependencies
        run: apt-get install -y llvm clang lld cmake ninja-build
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Prepare & build
        run: |
          bash ./scripts/prepare-linux.sh
          bash ./scripts/build-linux.sh
      - name: Upload build artifacts
        if: github.event.inputs.upload-artifacts == 'YES' || inputs.upload-artifacts == 'YES'
        uses: actions/upload-artifact@v4
        with:
          name: bin-linux-x86_64
          path: '**/*/index.node'
          retention-days: ${{ inputs.artifacts-retention-days }}
      - name: Publish to NPM (default)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-x64
      - name: Publish to NPM (vulkan)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-x64-vulkan
      - name: Publish to NPM (cuda)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-x64-cuda

  build-linux-arm64:
    runs-on: ubuntu-22.04-arm
    container: nvidia/cuda:12.6.2-devel-ubuntu22.04
    steps:
      - name: Upgrade git
        run: apt-get update && apt-get install -y git
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: externals cache
        uses: actions/cache@v4
        with:
          path: externals
          key: ${{ runner.os }}-${{ runner.arch }}-externals-${{ hashFiles('scripts/prepare-*.sh') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install build dependencies
        run: apt-get install -y llvm clang lld cmake ninja-build
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Prepare & build
        run: |
          bash ./scripts/prepare-linux.sh
          bash ./scripts/build-linux.sh
      - name: Upload build artifacts
        if: github.event.inputs.upload-artifacts == 'YES' || inputs.upload-artifacts == 'YES'
        uses: actions/upload-artifact@v4
        with:
          name: bin-linux-arm64
          path: '**/*/index.node'
          retention-days: ${{ inputs.artifacts-retention-days }}
      - name: Publish to NPM (default)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-arm64
      - name: Publish to NPM (cuda)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-arm64-cuda
      - name: Publish to NPM (vulkan)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-linux-arm64-vulkan

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x64
          - os: macos-14
            arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: externals cache
        uses: actions/cache@v4
        with:
          path: externals
          key: ${{ runner.os }}-${{ runner.arch }}-externals-${{ hashFiles('scripts/prepare-*.sh') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build (macOS)
        run: bash ./scripts/build-macos.sh
      - name: Upload build artifacts
        if: github.event.inputs.upload-artifacts == 'YES' || inputs.upload-artifacts == 'YES'
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.os }}
          path: '**/*/index.node'
          retention-days: ${{ inputs.artifacts-retention-days }}
      - name: Publish to NPM
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-darwin-${{ matrix.arch }}

  build-windows-x86_64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: externals cache
        uses: actions/cache@v4
        with:
          path: externals
          key: ${{ runner.os }}-${{ runner.arch }}-externals-${{ hashFiles('scripts/prepare-*.ps1') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Install Cuda Toolkit
        shell: powershell
        run: |
          choco install cuda --version=12.6.2.560 -y
          $env:Path += ';C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\bin'
          $env:Path += ';C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\libnvvp'
          echo "PATH=$env:Path" | Out-File -FilePath $env:GITHUB_ENV -Append
          $env:CUDA_PATH = 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6'
          echo "CUDA_PATH=$env:CUDA_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
          $env:CUDA_PATH_V12_6 = 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6'
          echo "CUDA_PATH_V12_6=$env:CUDA_PATH_V12_6" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Prepare & build
        run: |
          powershell ./scripts/prepare-windows.ps1 -target x86_64
          powershell ./scripts/build-windows.ps1 -target x86_64
      - name: Upload build artifacts
        if: github.event.inputs.upload-artifacts == 'YES' || inputs.upload-artifacts == 'YES'
        uses: actions/upload-artifact@v4
        with:
          name: bin-windows-x64
          path: '**/*/index.node'
          retention-days: ${{ inputs.artifacts-retention-days }}
      - name: Publish to NPM (default)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-win32-x64
      - name: Publish to NPM (vulkan)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-win32-x64-vulkan
      - name: Publish to NPM (cuda)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-win32-x64-cuda
  
  build-windows-arm64:
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: externals cache
        uses: actions/cache@v4
        with:
          path: externals
          key: ${{ runner.os }}-${{ runner.arch }}-externals-${{ hashFiles('scripts/prepare-*.ps1') }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Prepare & build
        run: |
          powershell ./scripts/prepare-windows.ps1 -target arm64
          powershell ./scripts/build-windows.ps1 -target arm64
      - name: Upload build artifacts
        if: github.event.inputs.upload-artifacts == 'YES' || inputs.upload-artifacts == 'YES'
        uses: actions/upload-artifact@v4
        with:
          name: bin-windows-arm64
          path: '**/*/index.node'
          retention-days: ${{ inputs.artifacts-retention-days }}
      - name: Publish to NPM (default)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-win32-arm64
      - name: Publish to NPM (vulkan)
        if: github.event.inputs.publish == 'YES' || inputs.publish == 'YES'
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: packages/node-llama-win32-arm64-vulkan


name: Release
on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          cache: 'yarn'
      - name: node_modules cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: externals cache
        uses: actions/cache@v4.0.2
        if: runner.os != 'Windows'
        with:
          path: externals
          key: ${{ runner.os }}-externals-${{ hashFiles('scripts/prepare-*.sh') }}
      - name: externals cache (Windows)
        uses: actions/cache@v4.0.2
        if: runner.os == 'Windows'
        with:
          path: externals
          key: ${{ runner.os }}-externals-${{ hashFiles('scripts/prepare-*.ps1') }}
      - name: Install dependencies
        run: yarn install
      - name: Prepare & build (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell ./scripts/prepare-windows.ps1
          powershell ./scripts/build-windows.ps1
      - name: Prepare & build (Linux x86_64)
        if: runner.os == 'Linux'
        run: |
          bash ./scripts/prepare-linux.sh
          bash ./scripts/build-linux.sh
      - name: Prepare & build (Linux arm64)
        if: runner.os == 'Linux'
        run: |
          docker run --rm \
            -v $(pwd):/work \
            dockcross/linux-arm64:latest \
            bash -c "./scripts/prepare-linux.sh && ./scripts/build-linux.sh"
      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: bash ./scripts/build-macos.sh
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.os }}
          path: bin
          retention-days: 3
  publish:
    permissions:
      contents: write
      pull-requests: read
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
          cache: 'yarn'
      - name: node_modules cache
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Download bundled files
        uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: bin-*
          merge-multiple: true
      - run: yarn install
      - run: yarn build
      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{secrets.NPM_TOKEN}}
